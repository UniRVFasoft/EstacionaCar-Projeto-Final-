{"ast":null,"code":"export class AppComponent {\n  constructor() {\n    this.title = 'estacionamento';\n    this.owner = '';\n  }\n  convertPeriod(mil) {\n    const min = Math.floor(mil / 60000);\n    const sec = Math.floor(mil % 60000 / 1000);\n    return `${min}m e ${sec}s`;\n  }\n  renderGarage() {\n    const garage = this.getGarage();\n    const garageElement = document.querySelector(\"#garage\");\n    if (garageElement) {\n      garageElement.innerHTML = \"\";\n      garage.forEach(c => this.addCarToGarage(c));\n    }\n  }\n  addCarToGarage(car) {\n    const row = document.createElement(\"tr\");\n    row.innerHTML = `\n      <td>${car.name}</td>\n      <td>${car.licence}</td>\n      <td data-time=\"${car.time}\">\n        ${car.time.toLocaleString('pt-BR', {\n      hour: 'numeric',\n      minute: 'numeric'\n    })}\n      </td>\n      <td>\n        <button class=\"delete\">x</button>\n      </td>\n    `;\n    const garageElement = document.querySelector(\"#garage\");\n    if (garageElement) {\n      garageElement.appendChild(row);\n    }\n  }\n  checkOut(info) {\n    const period = Date.now() - new Date(info[2].dataset['time']).getTime();\n    const formattedPeriod = this.convertPeriod(period);\n    const licence = info[1].textContent;\n    const msg = `O veículo ${info[0].textContent} de placa ${licence} permaneceu ${formattedPeriod} estacionado. \\n\\n Deseja encerrar?`;\n    if (!confirm(msg)) return;\n    const garage = this.getGarage().filter(c => c.licence !== licence);\n    localStorage.setItem('garage', JSON.stringify(garage));\n    this.renderGarage();\n  }\n  getGarage() {\n    const garageData = localStorage.getItem('garage');\n    return garageData ? JSON.parse(garageData) : [];\n  }\n  onClickSend() {\n    const name = document.querySelector(\"#name\")?.value;\n    const licence = document.querySelector(\"#licence\")?.value;\n    if (!name || !licence) {\n      alert(\"Os campos são obrigatórios.\");\n      return;\n    }\n    // Verifica se a entrada corresponde ao padrão de placa\n    const licensePlateRegex = /^[A-Z]{3}-\\d{4}$/; // Exemplo: AAA-1234\n    if (!licensePlateRegex.test(licence)) {\n      alert(\"Placa inválida. O formato deve ser AAA-1234.\");\n      return;\n    }\n    // Verifica se o campo de nome do dono foi preenchido\n    if (!this.owner) {\n      alert(\"O campo Nome do Dono é obrigatório.\");\n      return;\n    }\n    const card = {\n      name,\n      licence,\n      time: new Date(),\n      owner: this.owner\n    };\n    const garage = this.getGarage();\n    garage.push(card);\n    localStorage.setItem('garage', JSON.stringify(garage));\n    this.addCarToGarage(card);\n    document.querySelector(\"#name\").value = \"\";\n    document.querySelector(\"#licence\").value = \"\";\n    this.owner = \"\"; // Limpa o campo do nome do dono\n  }\n\n  ngOnInit() {\n    this.renderGarage();\n    const sendButton = document.querySelector(\"#send\");\n    if (sendButton) {\n      sendButton.addEventListener(\"click\", () => {\n        this.onClickSend();\n      });\n    }\n    const garageElement = document.querySelector(\"#garage\");\n    if (garageElement) {\n      garageElement.addEventListener(\"click\", e => {\n        const target = e.target;\n        if (target.className === \"delete\") {\n          const tableRow = target.parentElement?.parentElement;\n          if (tableRow) {\n            const cells = Array.from(tableRow.cells);\n            this.checkOut(cells);\n          }\n        }\n      });\n    }\n  }\n}","map":{"version":3,"names":["AppComponent","constructor","title","owner","convertPeriod","mil","min","Math","floor","sec","renderGarage","garage","getGarage","garageElement","document","querySelector","innerHTML","forEach","c","addCarToGarage","car","row","createElement","name","licence","time","toLocaleString","hour","minute","appendChild","checkOut","info","period","Date","now","dataset","getTime","formattedPeriod","textContent","msg","confirm","filter","localStorage","setItem","JSON","stringify","garageData","getItem","parse","onClickSend","value","alert","licensePlateRegex","test","card","push","ngOnInit","sendButton","addEventListener","e","target","className","tableRow","parentElement","cells","Array","from"],"sources":["D:\\Angular\\estacionamento\\src\\app\\app.component.ts"],"sourcesContent":["\n\n\nexport class AppComponent {\n  title = 'estacionamento';\n  owner = '';\n\n  convertPeriod(mil: number): string {\n    const min = Math.floor(mil / 60000);\n    const sec = Math.floor((mil % 60000) / 1000);\n    return `${min}m e ${sec}s`;\n  }\n\n  renderGarage(): void {\n    const garage = this.getGarage();\n    const garageElement = document.querySelector(\"#garage\");\n    if (garageElement) {\n      garageElement.innerHTML = \"\";\n      garage.forEach(c => this.addCarToGarage(c));\n    }\n  }\n\n  addCarToGarage(car: { name: string, licence: string, time: Date }): void {\n    const row = document.createElement(\"tr\");\n    row.innerHTML = `\n      <td>${car.name}</td>\n      <td>${car.licence}</td>\n      <td data-time=\"${car.time}\">\n        ${car.time.toLocaleString('pt-BR', {\n          hour: 'numeric', minute: 'numeric'\n        })}\n      </td>\n      <td>\n        <button class=\"delete\">x</button>\n      </td>\n    `;\n    const garageElement = document.querySelector(\"#garage\");\n    if (garageElement) {\n      garageElement.appendChild(row);\n    }\n  }\n\n  checkOut(info: HTMLTableDataCellElement[]): void {\n    const period: number = Date.now() - new Date(info[2].dataset['time']!).getTime();\n    const formattedPeriod: string = this.convertPeriod(period);\n    const licence: string = info[1].textContent!;\n    const msg: string = `O veículo ${info[0].textContent} de placa ${licence} permaneceu ${formattedPeriod} estacionado. \\n\\n Deseja encerrar?`;\n    if (!confirm(msg)) return;\n    const garage: { licence: string }[] = this.getGarage().filter(c => c.licence !== licence);\n    localStorage.setItem('garage', JSON.stringify(garage));\n    this.renderGarage();\n  }\n\n  getGarage(): { name: string, licence: string, time: Date }[] {\n    const garageData = localStorage.getItem('garage');\n    return garageData ? JSON.parse(garageData) : [];\n  }\n\n  onClickSend(): void {\n    const name = (<HTMLInputElement>document.querySelector(\"#name\"))?.value;\n    const licence = (<HTMLInputElement>document.querySelector(\"#licence\"))?.value;\n    \n    if (!name || !licence) {\n      alert(\"Os campos são obrigatórios.\");\n      return;\n    }\n  \n    // Verifica se a entrada corresponde ao padrão de placa\n    const licensePlateRegex = /^[A-Z]{3}-\\d{4}$/; // Exemplo: AAA-1234\n    if (!licensePlateRegex.test(licence)) {\n      alert(\"Placa inválida. O formato deve ser AAA-1234.\");\n      return;\n    }\n  \n    // Verifica se o campo de nome do dono foi preenchido\n    if (!this.owner) {\n      alert(\"O campo Nome do Dono é obrigatório.\");\n      return;\n    }\n  \n    const card = { name, licence, time: new Date(), owner: this.owner };\n    const garage = this.getGarage();\n    garage.push(card);\n    localStorage.setItem('garage', JSON.stringify(garage));\n    this.addCarToGarage(card);\n    (<HTMLInputElement>document.querySelector(\"#name\")).value = \"\";\n    (<HTMLInputElement>document.querySelector(\"#licence\")).value = \"\";\n    this.owner = \"\"; // Limpa o campo do nome do dono\n  }\n \n\n  ngOnInit(): void {\n    this.renderGarage();\n    const sendButton = document.querySelector<HTMLButtonElement>(\"#send\");\n    if (sendButton) {\n      sendButton.addEventListener(\"click\", () => {\n        this.onClickSend();\n      });\n    }\n    const garageElement = document.querySelector<HTMLTableElement>(\"#garage\");\n    if (garageElement) {\n      garageElement.addEventListener(\"click\", (e) => {\n        const target = e.target as HTMLElement;\n        if (target.className === \"delete\") {\n          const tableRow = target.parentElement?.parentElement as HTMLTableRowElement;\n          if (tableRow) {\n            const cells = Array.from(tableRow.cells) as HTMLTableDataCellElement[];\n            this.checkOut(cells);\n          }\n        }\n      });   \n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}