{"ast":null,"code":"import { format } from 'date-fns';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction HistoricoComponent_tr_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const car_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(car_r1.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(car_r1.licence);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(car_r1.owner);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.formatDateTime(car_r1.time));\n  }\n}\nclass HistoricoComponent {\n  constructor() {\n    this.historico = [];\n  }\n  ngOnInit() {\n    this.historico = this.getHistorico();\n  }\n  getHistorico() {\n    const garageData = localStorage.getItem('garage');\n    const garage = garageData ? JSON.parse(garageData) : [];\n    return garage.filter(car => car.deleted);\n  }\n  formatDateTime(dateTime) {\n    return format(new Date(dateTime), 'dd/MM/yyyy HH:mm');\n  }\n}\nHistoricoComponent.ɵfac = function HistoricoComponent_Factory(t) {\n  return new (t || HistoricoComponent)();\n};\nHistoricoComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: HistoricoComponent,\n  selectors: [[\"app-historico\"]],\n  decls: 13,\n  vars: 1,\n  consts: [[1, \"table\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function HistoricoComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"table\", 0)(1, \"thead\")(2, \"tr\")(3, \"th\");\n      i0.ɵɵtext(4, \"Ve\\u00EDculo\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"th\");\n      i0.ɵɵtext(6, \"Placa\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"th\");\n      i0.ɵɵtext(8, \"Propriet\\u00E1rio\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"th\");\n      i0.ɵɵtext(10, \"Entrada\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(11, \"tbody\");\n      i0.ɵɵtemplate(12, HistoricoComponent_tr_12_Template, 9, 4, \"tr\", 1);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(12);\n      i0.ɵɵproperty(\"ngForOf\", ctx.historico);\n    }\n  },\n  dependencies: [i1.NgForOf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { HistoricoComponent };","map":{"version":3,"names":["format","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","car_r1","name","licence","owner","ctx_r0","formatDateTime","time","HistoricoComponent","constructor","historico","ngOnInit","getHistorico","garageData","localStorage","getItem","garage","JSON","parse","filter","car","deleted","dateTime","Date","selectors","decls","vars","consts","template","HistoricoComponent_Template","rf","ctx","ɵɵtemplate","HistoricoComponent_tr_12_Template","ɵɵproperty"],"sources":["C:\\Users\\rafae\\OneDrive\\Documentos\\estacionamento2\\src\\app\\historico\\historico.component.ts","C:\\Users\\rafae\\OneDrive\\Documentos\\estacionamento2\\src\\app\\historico\\historico.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { format } from 'date-fns';\n\ninterface Car {\n  name: string;\n  licence: string;\n  time: string;\n  owner: string;\n  deleted?: boolean;\n}\n\n@Component({\n  selector: 'app-historico',\n  templateUrl: './historico.component.html',\n  styleUrls: ['./historico.component.css']\n})\nexport class HistoricoComponent implements OnInit {\n  historico: Car[] = [];\n\n  constructor() {}\n\n  ngOnInit(): void {\n    this.historico = this.getHistorico();\n  }\n\n  getHistorico(): Car[] {\n    const garageData = localStorage.getItem('garage');\n    const garage: Car[] = garageData ? JSON.parse(garageData) : [];\n    return garage.filter(car => car.deleted);\n  }\n\n  formatDateTime(dateTime: string): string {\n    return format(new Date(dateTime), 'dd/MM/yyyy HH:mm');\n  }\n}\n","<table class=\"table\">\n    <thead>\n      <tr>\n        <th>Veículo</th>\n        <th>Placa</th>\n        <th>Proprietário</th>\n        <th>Entrada</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let car of historico\">\n        <td>{{ car.name }}</td>\n        <td>{{ car.licence }}</td>\n        <td>{{ car.owner }}</td>\n        <td>{{ formatDateTime(car.time) }}</td>\n      </tr>\n    </tbody>\n  </table>\n  "],"mappings":"AACA,SAASA,MAAM,QAAQ,UAAU;;;;;ICS3BC,EAAA,CAAAC,cAAA,SAAkC;IAC5BD,EAAA,CAAAE,MAAA,GAAc;IAAAF,EAAA,CAAAG,YAAA,EAAK;IACvBH,EAAA,CAAAC,cAAA,SAAI;IAAAD,EAAA,CAAAE,MAAA,GAAiB;IAAAF,EAAA,CAAAG,YAAA,EAAK;IAC1BH,EAAA,CAAAC,cAAA,SAAI;IAAAD,EAAA,CAAAE,MAAA,GAAe;IAAAF,EAAA,CAAAG,YAAA,EAAK;IACxBH,EAAA,CAAAC,cAAA,SAAI;IAAAD,EAAA,CAAAE,MAAA,GAA8B;IAAAF,EAAA,CAAAG,YAAA,EAAK;;;;;IAHnCH,EAAA,CAAAI,SAAA,GAAc;IAAdJ,EAAA,CAAAK,iBAAA,CAAAC,MAAA,CAAAC,IAAA,CAAc;IACdP,EAAA,CAAAI,SAAA,GAAiB;IAAjBJ,EAAA,CAAAK,iBAAA,CAAAC,MAAA,CAAAE,OAAA,CAAiB;IACjBR,EAAA,CAAAI,SAAA,GAAe;IAAfJ,EAAA,CAAAK,iBAAA,CAAAC,MAAA,CAAAG,KAAA,CAAe;IACfT,EAAA,CAAAI,SAAA,GAA8B;IAA9BJ,EAAA,CAAAK,iBAAA,CAAAK,MAAA,CAAAC,cAAA,CAAAL,MAAA,CAAAM,IAAA,EAA8B;;;ADH1C,MAKaC,kBAAkB;EAG7BC,YAAA;IAFA,KAAAC,SAAS,GAAU,EAAE;EAEN;EAEfC,QAAQA,CAAA;IACN,IAAI,CAACD,SAAS,GAAG,IAAI,CAACE,YAAY,EAAE;EACtC;EAEAA,YAAYA,CAAA;IACV,MAAMC,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;IACjD,MAAMC,MAAM,GAAUH,UAAU,GAAGI,IAAI,CAACC,KAAK,CAACL,UAAU,CAAC,GAAG,EAAE;IAC9D,OAAOG,MAAM,CAACG,MAAM,CAACC,GAAG,IAAIA,GAAG,CAACC,OAAO,CAAC;EAC1C;EAEAf,cAAcA,CAACgB,QAAgB;IAC7B,OAAO5B,MAAM,CAAC,IAAI6B,IAAI,CAACD,QAAQ,CAAC,EAAE,kBAAkB,CAAC;EACvD;;AAjBWd,kBAAkB,C;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB,C;QAAlBA,kBAAkB;EAAAgB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,4BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MChB/BnC,EAAA,CAAAC,cAAA,eAAqB;MAGTD,EAAA,CAAAE,MAAA,mBAAO;MAAAF,EAAA,CAAAG,YAAA,EAAK;MAChBH,EAAA,CAAAC,cAAA,SAAI;MAAAD,EAAA,CAAAE,MAAA,YAAK;MAAAF,EAAA,CAAAG,YAAA,EAAK;MACdH,EAAA,CAAAC,cAAA,SAAI;MAAAD,EAAA,CAAAE,MAAA,wBAAY;MAAAF,EAAA,CAAAG,YAAA,EAAK;MACrBH,EAAA,CAAAC,cAAA,SAAI;MAAAD,EAAA,CAAAE,MAAA,eAAO;MAAAF,EAAA,CAAAG,YAAA,EAAK;MAGpBH,EAAA,CAAAC,cAAA,aAAO;MACLD,EAAA,CAAAqC,UAAA,KAAAC,iCAAA,gBAKK;MACPtC,EAAA,CAAAG,YAAA,EAAQ;;;MANcH,EAAA,CAAAI,SAAA,IAAY;MAAZJ,EAAA,CAAAuC,UAAA,YAAAH,GAAA,CAAArB,SAAA,CAAY;;;;;;SDMzBF,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}