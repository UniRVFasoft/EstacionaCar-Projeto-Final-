{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { format } from 'date-fns';\nlet AppComponent = class AppComponent {\n  constructor(router, dataService) {\n    this.router = router;\n    this.dataService = dataService;\n    this.title = 'estacionamento';\n  }\n  ngOnInit() {\n    // Restante do código...\n  }\n  showHistory() {\n    const history = this.dataService.getHistoricoDeletados();\n    if (history.length > 0) {\n      const historyText = history.map(car => `${car.name} - ${car.licence}`).join('\\n');\n      alert(`Histórico de Veículos:\\n${historyText}`);\n    } else {\n      alert(\"Não há veículos no histórico.\");\n    }\n    this.router.navigate(['/historico']);\n  }\n  // Restante do código...\n  ngOnInit() {\n    const ownerInput = document.querySelector(\"#owner\");\n    ownerInput.value = localStorage.getItem('owner') || '';\n    ownerInput.addEventListener('input', () => {\n      localStorage.setItem('owner', ownerInput.value);\n    });\n    this.renderGarage();\n    const sendButton = document.querySelector(\"#send\");\n    if (sendButton) {\n      sendButton.addEventListener(\"click\", () => {\n        this.onClickSend();\n      });\n    }\n    const garageElement = document.querySelector(\"#garage\");\n    if (garageElement) {\n      garageElement.addEventListener(\"click\", e => {\n        const target = e.target;\n        if (target.className === \"delete\") {\n          const tableRow = target.parentElement?.parentElement;\n          if (tableRow) {\n            const cells = Array.from(tableRow.cells);\n            this.checkOut(cells);\n          }\n        }\n      });\n    }\n  }\n  renderGarage() {\n    const garage = this.getGarage();\n    const garageElement = document.querySelector(\"#garage\");\n    if (garageElement) {\n      garageElement.innerHTML = \"\";\n      garage.forEach(c => {\n        if (!c.deleted) {\n          this.addCarToGarage(c);\n        }\n      });\n    }\n  }\n  addCarToGarage(car) {\n    const row = document.createElement(\"tr\");\n    row.innerHTML = `\n      <td class=\"data-cell\">${car.name}</td>\n      <td>${car.licence}</td>\n      <td>${car.owner}</td>\n      <td data-time=\"${car.time}\">\n        ${this.formatDateTime(new Date(car.time))}\n      </td>\n      <td>\n        <button class=\"delete\">Deletar</button>\n      </td>\n    `;\n    const deleteButton = row.querySelector(\".delete\");\n    if (deleteButton) {\n      deleteButton.style.backgroundColor = \"#850a0a\";\n      deleteButton.style.color = \"white\";\n      deleteButton.style.fontWeight = \"bold\";\n    }\n    const garageElement = document.querySelector(\"#garage\");\n    if (garageElement) {\n      garageElement.appendChild(row);\n    }\n  }\n  formatDateTime(dateTime) {\n    return format(dateTime, 'dd/MM/yyyy HH:mm');\n  }\n  checkOut(info) {\n    const startTime = info[3].dataset['time'];\n    const endTime = new Date().toISOString();\n    const period = new Date(endTime).getTime() - new Date(startTime).getTime();\n    const formattedPeriod = this.convertPeriod(period);\n    const licence = info[1].textContent;\n    const msg = `O veículo ${info[0].textContent} de placa ${licence} permaneceu ${formattedPeriod} estacionado.\\n\\nDeseja encerrar?`;\n    if (!confirm(msg)) return;\n    const garage = this.getGarage().map(c => {\n      if (c.licence === licence) {\n        return {\n          ...c,\n          deleted: true // Marcar o carro como deletado\n        };\n      }\n\n      return c;\n    });\n    localStorage.setItem('garage', JSON.stringify(garage));\n    this.renderGarage();\n  }\n  onClickSend() {\n    const owner = document.querySelector(\"#owner\")?.value;\n    const name = document.querySelector(\"#name\")?.value;\n    const licence = document.querySelector(\"#licence\")?.value;\n    if (!name || !licence) {\n      alert(\"Os campos são obrigatórios.\");\n      return;\n    }\n    // Verifica se a entrada corresponde ao padrão de placa\n    const licensePlateRegex = /^[A-Z]{3}-\\d{4}$/; // Exemplo: AAA-1234\n    if (!licensePlateRegex.test(licence)) {\n      alert(\"Placa inválida. O formato deve ser AAA-1234.\");\n      return;\n    }\n    // Verifica se o campo de nome do dono foi preenchido\n    if (!owner) {\n      alert(\"O campo Proprietário é obrigatório.\");\n      return;\n    }\n    const time = new Date().toISOString(); // Obter a data e hora atual em formato ISO string\n    const car = {\n      name,\n      licence,\n      time,\n      owner\n    };\n    const garage = this.getGarage();\n    garage.push(car);\n    localStorage.setItem('garage', JSON.stringify(garage));\n    this.addCarToGarage(car);\n    document.querySelector(\"#name\").value = \"\";\n    document.querySelector(\"#licence\").value = \"\";\n    document.querySelector(\"#owner\").value = \"\";\n  }\n  showHistory() {\n    const garage = this.getGarage();\n    const history = garage.filter(car => car.deleted); // Filtrar apenas os carros deletados\n    if (history.length > 0) {\n      const historyText = history.map(car => `${car.name} - ${car.licence}`).join('\\n');\n      alert(`Histórico de Veículos:\\n${historyText}`);\n    } else {\n      alert(\"Não há veículos no histórico.\");\n    }\n    this.router.navigate(['/historico']);\n  }\n  getGarage() {\n    const garageData = localStorage.getItem('garage');\n    return garageData ? JSON.parse(garageData) : [];\n  }\n  convertPeriod(mil) {\n    const min = Math.floor(mil / 60000);\n    const sec = Math.floor(mil % 60000 / 1000);\n    return `${min}m e ${sec}s`;\n  }\n};\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})], AppComponent);\nexport { AppComponent };","map":{"version":3,"names":["Component","format","AppComponent","constructor","router","dataService","title","ngOnInit","showHistory","history","getHistoricoDeletados","length","historyText","map","car","name","licence","join","alert","navigate","ownerInput","document","querySelector","value","localStorage","getItem","addEventListener","setItem","renderGarage","sendButton","onClickSend","garageElement","e","target","className","tableRow","parentElement","cells","Array","from","checkOut","garage","getGarage","innerHTML","forEach","c","deleted","addCarToGarage","row","createElement","owner","time","formatDateTime","Date","deleteButton","style","backgroundColor","color","fontWeight","appendChild","dateTime","info","startTime","dataset","endTime","toISOString","period","getTime","formattedPeriod","convertPeriod","textContent","msg","confirm","JSON","stringify","licensePlateRegex","test","push","filter","garageData","parse","mil","min","Math","floor","sec","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\rafae\\OneDrive\\Documentos\\estacionamento2\\src\\app\\app.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { format } from 'date-fns';\nimport { Router } from '@angular/router';\nimport { DataService } from './data.service';\nimport { Car } from './car.model';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'estacionamento';\n\n  constructor(private router: Router, private dataService: DataService) {}\n\n  ngOnInit(): void {\n    // Restante do código...\n  }\n\n  showHistory(): void {\n    const history = this.dataService.getHistoricoDeletados();\n    \n    if (history.length > 0) {\n      const historyText = history.map(car => `${car.name} - ${car.licence}`).join('\\n');\n      alert(`Histórico de Veículos:\\n${historyText}`);\n    } else {\n      alert(\"Não há veículos no histórico.\");\n    }\n    \n    this.router.navigate(['/historico']);\n  }\n\n  // Restante do código...\n\n\n  \n  ngOnInit(): void {\n    const ownerInput = <HTMLInputElement>document.querySelector(\"#owner\");\n    ownerInput.value = localStorage.getItem('owner') || '';\n    ownerInput.addEventListener('input', () => {\n      localStorage.setItem('owner', ownerInput.value);\n    });\n\n    this.renderGarage();\n    const sendButton = document.querySelector<HTMLButtonElement>(\"#send\");\n    if (sendButton) {\n      sendButton.addEventListener(\"click\", () => {\n        this.onClickSend();\n      });\n    }\n    const garageElement = document.querySelector<HTMLTableElement>(\"#garage\");\n    if (garageElement) {\n      garageElement.addEventListener(\"click\", (e) => {\n        const target = e.target as HTMLElement;\n        if (target.className === \"delete\") {\n          const tableRow = target.parentElement?.parentElement as HTMLTableRowElement;\n          if (tableRow) {\n            const cells = Array.from(tableRow.cells) as HTMLTableDataCellElement[];\n            this.checkOut(cells);\n          }\n        }\n      });\n    }\n  }\n\n  renderGarage(): void {\n    const garage = this.getGarage();\n    const garageElement = document.querySelector(\"#garage\");\n    if (garageElement) {\n      garageElement.innerHTML = \"\";\n      garage.forEach(c => {\n        if (!c.deleted) {\n          this.addCarToGarage(c);\n        }\n      });\n    }\n  }\n\n  addCarToGarage(car: Car): void {\n    const row = document.createElement(\"tr\");\n    row.innerHTML = `\n      <td class=\"data-cell\">${car.name}</td>\n      <td>${car.licence}</td>\n      <td>${car.owner}</td>\n      <td data-time=\"${car.time}\">\n        ${this.formatDateTime(new Date(car.time))}\n      </td>\n      <td>\n        <button class=\"delete\">Deletar</button>\n      </td>\n    `;\n  \n    const deleteButton = row.querySelector(\".delete\") as HTMLButtonElement;\n    if (deleteButton) {\n      deleteButton.style.backgroundColor = \"#850a0a\";\n      deleteButton.style.color = \"white\";\n      deleteButton.style.fontWeight = \"bold\";\n    }\n  \n    const garageElement = document.querySelector(\"#garage\");\n    if (garageElement) {\n      garageElement.appendChild(row);\n    }\n  }\n\n  formatDateTime(dateTime: Date): string {\n    return format(dateTime, 'dd/MM/yyyy HH:mm');\n  }\n\n  checkOut(info: HTMLTableDataCellElement[]): void {\n    const startTime: string = info[3].dataset['time']!;\n    const endTime: string = new Date().toISOString();\n    const period: number = new Date(endTime).getTime() - new Date(startTime).getTime();\n    const formattedPeriod: string = this.convertPeriod(period);\n    const licence: string = info[1].textContent!;\n    const msg: string = `O veículo ${info[0].textContent} de placa ${licence} permaneceu ${formattedPeriod} estacionado.\\n\\nDeseja encerrar?`;\n    if (!confirm(msg)) return;\n    const garage: Car[] = this.getGarage().map(c => {\n      if (c.licence === licence) {\n        return {\n          ...c,\n          deleted: true // Marcar o carro como deletado\n        };\n      }\n      return c;\n    });\n    localStorage.setItem('garage', JSON.stringify(garage));\n    this.renderGarage();\n  }\n\n  onClickSend(): void {\n    const owner = (<HTMLInputElement>document.querySelector(\"#owner\"))?.value;\n    const name = (<HTMLInputElement>document.querySelector(\"#name\"))?.value;\n    const licence = (<HTMLInputElement>document.querySelector(\"#licence\"))?.value;\n\n    if (!name || !licence) {\n      alert(\"Os campos são obrigatórios.\");\n      return;\n    }\n\n    // Verifica se a entrada corresponde ao padrão de placa\n    const licensePlateRegex = /^[A-Z]{3}-\\d{4}$/; // Exemplo: AAA-1234\n    if (!licensePlateRegex.test(licence)) {\n      alert(\"Placa inválida. O formato deve ser AAA-1234.\");\n      return;\n    }\n\n    // Verifica se o campo de nome do dono foi preenchido\n    if (!owner) {\n      alert(\"O campo Proprietário é obrigatório.\");\n      return;\n    }\n\n    const time = new Date().toISOString(); // Obter a data e hora atual em formato ISO string\n    const car: Car = { name, licence, time, owner };\n    const garage = this.getGarage();\n    garage.push(car);\n    localStorage.setItem('garage', JSON.stringify(garage));\n    this.addCarToGarage(car);\n    (<HTMLInputElement>document.querySelector(\"#name\")).value = \"\";\n    (<HTMLInputElement>document.querySelector(\"#licence\")).value = \"\";\n    (<HTMLInputElement>document.querySelector(\"#owner\")).value = \"\";\n  }\n\n  showHistory(): void {\n    const garage = this.getGarage();\n    const history = garage.filter(car => car.deleted); // Filtrar apenas os carros deletados\n    \n    if (history.length > 0) {\n      const historyText = history.map(car => `${car.name} - ${car.licence}`).join('\\n');\n      alert(`Histórico de Veículos:\\n${historyText}`);\n    } else {\n      alert(\"Não há veículos no histórico.\");\n    }\n    this.router.navigate(['/historico']);\n  }\n\n  getGarage(): Car[] {\n    const garageData = localStorage.getItem('garage');\n    return garageData ? JSON.parse(garageData) : [];\n  }\n\n  convertPeriod(mil: number): string {\n    const min = Math.floor(mil / 60000);\n    const sec = Math.floor((mil % 60000) / 1000);\n    return `${min}m e ${sec}s`;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}